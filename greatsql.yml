- name: install GreatSQL
  hosts: greatsql_dbs
  remote_user: root
  ignore_errors: yes
  vars_files: vars.yml

  tasks:
    - include: check_mysql.yml

    - block:
       - name: modify selinux config file
         lineinfile: dest=/etc/selinux/config regexp='SELINUX=enforcing' line='SELINUX=disabled' backrefs=yes state=present
    
       - name: stop firewalld
         command: /usr/bin/systemctl stop firewalld.service
    
       - name: disable firewalld
         command: /usr/bin/systemctl disable firewalld.service
    
       - name: install jemalloc jemalloc-devel
         raw: yum install -y jemalloc jemalloc-devel
    
       - name: add group mysql
         group: name={{mysql_user}} state=present
    
       - name: add user mysql
         user: name={{mysql_user}} group={{mysql_user}} shell=/sbin/nologin
    
       - name: create data_dir
         file: path={{data_dir}} state=directory owner={{mysql_user}} group={{mysql_user}} mode=0700
    
       - name: extract GreatSQL tarball
         unarchive: src={{work_dir}}/{{file_name}} dest={{extract_dir}} mode=755
    
       - name: backup /etc/my.cnf
         copy: src={{my_cnf}} dest={{my_cnf}}.orig
    
       - name: copy my.cnf
         copy: src={{base_dir}}/support-files/my.cnf dest={{my_cnf}} owner={{mysql_user}} group={{mysql_user}} mode=0644
    
       - name: copy sysconfig/mysql to /etc/sysconfig/mysql
         copy: src={{base_dir}}/support-files/sysconfig/mysql dest=/etc/sysconfig owner=root group=root mode=0644
    
       - name: preload jemalloc
         command: /usr/sbin/ldconfig
    
       - name: copy mysql PATH
         copy: src={{base_dir}}/support-files/mysql.sh dest=/etc/profile.d/mysql.sh
    
       - name: copy greatsql.server
         copy: src={{base_dir}}/support-files/greatsql.service dest=/usr/lib/systemd/system/ owner=root group=root mode=0644
    
       - name: reload GreatSQL service
         command: /usr/bin/systemctl daemon-reload
    
       - name: start the GreatSQL service
         command: /usr/bin/systemctl start greatsql

      when: check_mysql_port.stdout == "True" and check_mysql_ps.stdout == "True"

- name: mgr primary
  hosts: greatsql_mgr_primary
  ignore_errors: yes
  vars_files: vars.yml
  tasks:
     - include: check_mysql.yml

     - block:
        - name: wait for mysqld start
          shell: sleep {{ wait_for_start }}
          delay: 1

        - name: mgr primary init
          shell: >
                {{ base_dir }}/bin/mysql -uroot -f -S {{ data_dir }}/mysql.sock
                -ANse " CREATE USER {{ mgr_user }} IDENTIFIED WITH mysql_native_password BY '{{ mgr_user_pwd }}';
                GRANT REPLICATION SLAVE, BACKUP_ADMIN ON *.* TO {{ mgr_user }};
                RESET MASTER;
                CHANGE MASTER TO MASTER_USER='{{ mgr_user }}', MASTER_PASSWORD='{{ mgr_user_pwd }}' FOR CHANNEL 'group_replication_recovery';
                SET GLOBAL group_replication_local_address = '{{ inventory_hostname }}:33061';
                SET GLOBAL group_replication_group_seeds = '{{ mgr_seeds }}';
                SET GLOBAL group_replication_bootstrap_group=ON;
                START GROUP_REPLICATION;
                SET GLOBAL group_replication_bootstrap_group=OFF; "

       when: check_mysql_port.stdout == "False" or check_mysql_ps.stdout == "False"

- name: mgr secondary
  hosts: greatsql_mgr_secondary
  ignore_errors: yes
  vars_files: vars.yml
  tasks:
     - include: check_mysql.yml

     - block:
        - name: wait for mysqld start
          shell: sleep {{ wait_for_start }}
          delay: 1

        - name: mgr secondary init
          shell: >
                {{ base_dir }}/bin/mysql -uroot -f -S {{ data_dir }}/mysql.sock
                -ANse " CREATE USER {{ mgr_user }} IDENTIFIED WITH mysql_native_password BY '{{ mgr_user_pwd }}';
                GRANT REPLICATION SLAVE, BACKUP_ADMIN ON *.* TO {{ mgr_user }};
                RESET MASTER;
                CHANGE MASTER TO MASTER_USER='{{ mgr_user }}', MASTER_PASSWORD='{{ mgr_user_pwd }}' FOR CHANNEL 'group_replication_recovery';
                SET GLOBAL group_replication_local_address = '{{ inventory_hostname }}:33061';
                SET GLOBAL group_replication_group_seeds = '{{ mgr_seeds }}';
                START GROUP_REPLICATION; "

       when: check_mysql_port.stdout == "False" or check_mysql_ps.stdout == "False"